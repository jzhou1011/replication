pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=0.015, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=0.015, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=0.015, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=0.016, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=0.016, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=0.016, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=0.02, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=0.02, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=0.02, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=0.025, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=0.025, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=0.025, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=0.015, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=0.015, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=0.015, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=0.005, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=0.005, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=0.005, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=abs(c1_est), c2=c2_est), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.00006, c2=c2_est), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.00006, c2=c2_est), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.00006, c2=c2_est), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.00006, c2=0.00006), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.00006, c2=0.00006), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.00006, c2=0.00006), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.000006, c2=0.000006), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.000006, c2=0.000006), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.000006, c2=0.000006), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.0001, c2=0.0001), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.0001, c2=0.0001), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.0001, c2=0.0001), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.01, c2=0.01), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.01, c2=0.01), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.01, c2=0.01), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.01, c2=0.01), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.01, c2=0.01), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.01, c2=0.01), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.001, c2=0.001), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.001, c2=0.001), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.001, c2=0.001), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.001), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.001), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.001), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.005), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.005), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.005), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.003), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.003), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.003), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.002), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.002), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.002), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.002), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.002), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=0.001, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.002), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=0.01, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.002), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=0.01, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.002), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=0.01, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.002), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=0.02, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.002), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=0.02, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.002), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=0.02, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.002), color="palevioletred1")
pred_obs
pred_obs<-ggplot(data = results.data, mapping = aes(x = s1, y = s2)) +
geom_point()+
stat_function(fun=calculate_lowerCI,args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.002), color="paleturquoise2")+
stat_function(fun=calculate_upperCI,args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.002), color="paleturquoise2")+
stat_function(fun=calculate_mean, args=list(sigma=sigma_g_est, sampleS1<-N_1, sampleS2<-N_2, c1=0.002, c2=0.002), color="palevioletred1")
pred_obs
library(tidyverse)
library(dplyr)
var_g<-3
var_c1<-3
var_c2<-0
M<-1000
N_1<-3
N_2<-2
zscore1<-qnorm(0.05/M,lower.tail = FALSE)
lambda <- rnorm(n=M, mean=0, sd=sqrt(var_g))
s1_dist<-as.vector(matrix(nrow=M, ncol=1))
s2_dist<-as.vector(matrix(nrow=M, ncol=1))
delta1<-rnorm(n=M, mean=0, sd=sqrt(var_c1))
delta2<-rnorm(n=M, mean=0, sd=sqrt(var_c2))
for (i in 1:M){
s1_dist[i]<-rnorm(n=1,mean=sqrt(N_1)*(lambda[i]+delta1[i]),sd=1)
s2_dist[i]<-rnorm(n=1,mean=sqrt(N_2)*(lambda[i]+delta2[i]),sd=1)
}
results.data<-data.frame(lambda,s1_dist, s2_dist)
s1_sig <- filter(results.data,s1_dist>zscore1)
num_s1 <-nrow(s1_sig)
zscore2<-qnorm(0.05/num_s1,lower.tail = FALSE)
s1_s2_sig<-filter(s1_sig,s2_dist>zscore2)
#s1 variance
MLE<-function(var){
estimate<-choose(M,num_s1)
for(i in s1_sig$s1){
estimate<-estimate*dnorm(i, mean=0, sd=sqrt(var))
}
estimate<-estimate*(pnorm(zscore1, mean=0, sd=sqrt(var)))^(M-num_s1)
}
max<-0
maxVar<-0
for(i in seq(from=1, to=50, by=.001)){
temp<-MLE(i)
#print(temp)
if (temp>max) {
max<-temp
maxVar<-i
}
}
#sigma_g
sigma_g <- mean(s1_sig$s2_dist)/mean(s1_sig$s1_dist)*maxVar/sqrt(N_1*N_2)
#estimating c1
c1_est<-(maxVar-1-sigma_g*(N_1))/(N_1)
#estimating c2
#this is not accuraute and we must fine another way to do this.
var_1<-((s1_sig$s1_dist)*(sqrt(N_2)))-(s1_sig$s2_dist*(sqrt(N_1)))
var_1<-var(var_1)/(N_1+N_2)
expected<-(N_2*(1+N_1*var_c1)+N_1*(1+N_2*var_c2))/(N_1+N_2)
sigma_g
c1_est
library(tidyverse)
library(dplyr)
var_g<-3
var_c1<-3
var_c2<-0
M<-1000
N_1<-3
N_2<-2
zscore1<-qnorm(0.05/M,lower.tail = FALSE)
lambda <- rnorm(n=M, mean=0, sd=sqrt(var_g))
s1_dist<-as.vector(matrix(nrow=M, ncol=1))
s2_dist<-as.vector(matrix(nrow=M, ncol=1))
delta1<-rnorm(n=M, mean=0, sd=sqrt(var_c1))
delta2<-rnorm(n=M, mean=0, sd=sqrt(var_c2))
for (i in 1:M){
s1_dist[i]<-rnorm(n=1,mean=sqrt(N_1)*(lambda[i]+delta1[i]),sd=1)
s2_dist[i]<-rnorm(n=1,mean=sqrt(N_2)*(lambda[i]+delta2[i]),sd=1)
}
results.data<-data.frame(lambda,s1_dist, s2_dist)
#s1_sig <- filter(results.data,s1_dist>zscore1)
s1_sig <- results.data
num_s1 <-nrow(s1_sig)
zscore2<-qnorm(0.05/num_s1,lower.tail = FALSE)
s1_s2_sig<-filter(s1_sig,s2_dist>zscore2)
#s1 variance
MLE<-function(var){
estimate<-choose(M,num_s1)
for(i in s1_sig$s1){
estimate<-estimate*dnorm(i, mean=0, sd=sqrt(var))
}
estimate<-estimate*(pnorm(zscore1, mean=0, sd=sqrt(var)))^(M-num_s1)
}
max<-0
maxVar<-0
for(i in seq(from=1, to=50, by=.001)){
temp<-MLE(i)
#print(temp)
if (temp>max) {
max<-temp
maxVar<-i
}
}
#sigma_g
sigma_g <- mean(s1_sig$s2_dist)/mean(s1_sig$s1_dist)*maxVar/sqrt(N_1*N_2)
#estimating c1
c1_est<-(maxVar-1-sigma_g*(N_1))/(N_1)
#estimating c2
#this is not accuraute and we must fine another way to do this.
var_1<-((s1_sig$s1_dist)*(sqrt(N_2)))-(s1_sig$s2_dist*(sqrt(N_1)))
var_1<-var(var_1)/(N_1+N_2)
expected<-(N_2*(1+N_1*var_c1)+N_1*(1+N_2*var_c2))/(N_1+N_2)
c1_est
sigma_g_est
sigma_g
sigma_g <- mean(s1_sig$s2_dist/s1_sig$s1_dist)*maxVar/sqrt(N_1*N_2)
var_g<-3
var_c1<-3
var_c2<-0
M<-1000
N_1<-3
N_2<-2
zscore1<-qnorm(0.05/M,lower.tail = FALSE)
lambda <- rnorm(n=M, mean=0, sd=sqrt(var_g))
s1_dist<-as.vector(matrix(nrow=M, ncol=1))
s2_dist<-as.vector(matrix(nrow=M, ncol=1))
delta1<-rnorm(n=M, mean=0, sd=sqrt(var_c1))
delta2<-rnorm(n=M, mean=0, sd=sqrt(var_c2))
for (i in 1:M){
s1_dist[i]<-rnorm(n=1,mean=sqrt(N_1)*(lambda[i]+delta1[i]),sd=1)
s2_dist[i]<-rnorm(n=1,mean=sqrt(N_2)*(lambda[i]+delta2[i]),sd=1)
}
results.data<-data.frame(lambda,s1_dist, s2_dist)
#s1_sig <- filter(results.data,s1_dist>zscore1)
s1_sig<-results.data
num_s1 <-nrow(s1_sig)
zscore2<-qnorm(0.05/num_s1,lower.tail = FALSE)
s1_s2_sig<-filter(s1_sig,s2_dist>zscore2)
#s1 variance
MLE<-function(var){
estimate<-choose(M,num_s1)
for(i in s1_sig$s1){
estimate<-estimate*dnorm(i, mean=0, sd=sqrt(var))
}
estimate<-estimate*(pnorm(zscore1, mean=0, sd=sqrt(var)))^(M-num_s1)
}
max<-0
maxVar<-0
for(i in seq(from=1, to=50, by=.001)){
temp<-MLE(i)
#print(temp)
if (temp>max) {
max<-temp
maxVar<-i
}
}
sigma_g <- mean(s1_sig$s2_dist/s1_sig$s1_dist)*maxVar/sqrt(N_1*N_2)
s1_sig <- filter(results.data,s1_dist>zscore1)
lambda <- rnorm(n=M, mean=0, sd=sqrt(var_g))
s1_dist<-as.vector(matrix(nrow=M, ncol=1))
s2_dist<-as.vector(matrix(nrow=M, ncol=1))
delta1<-rnorm(n=M, mean=0, sd=sqrt(var_c1))
delta2<-rnorm(n=M, mean=0, sd=sqrt(var_c2))
for (i in 1:M){
s1_dist[i]<-rnorm(n=1,mean=sqrt(N_1)*(lambda[i]+delta1[i]),sd=1)
s2_dist[i]<-rnorm(n=1,mean=sqrt(N_2)*(lambda[i]+delta2[i]),sd=1)
}
results.data<-data.frame(lambda,s1_dist, s2_dist)
s1_sig <- filter(results.data,s1_dist>zscore1)
num_s1 <-nrow(s1_sig)
zscore2<-qnorm(0.05/num_s1,lower.tail = FALSE)
s1_s2_sig<-filter(s1_sig,s2_dist>zscore2)
#s1 variance
MLE<-function(var){
estimate<-choose(M,num_s1)
for(i in s1_sig$s1){
estimate<-estimate*dnorm(i, mean=0, sd=sqrt(var))
}
estimate<-estimate*(pnorm(zscore1, mean=0, sd=sqrt(var)))^(M-num_s1)
}
max<-0
maxVar<-0
for(i in seq(from=1, to=50, by=.001)){
temp<-MLE(i)
#print(temp)
if (temp>max) {
max<-temp
maxVar<-i
}
}
#sigma_g
sigma_g <- mean(results.data$s2_dist/results.data$s1_dist)*maxVar/sqrt(N_1*N_2)
mean(results.data$s2_dist/results.data$s1_dist)
sigma_g <- mean(s1_sig$s2_dist/s1_sig$s1_dist)*maxVar/sqrt(N_1*N_2)
var_g<-3
var_c1<-3
var_c2<-0
M<-1000
N_1<-3
N_2<-2
zscore1<-qnorm(0.05/M,lower.tail = FALSE)
lambda <- rnorm(n=M, mean=0, sd=sqrt(var_g))
s1_dist<-as.vector(matrix(nrow=M, ncol=1))
s2_dist<-as.vector(matrix(nrow=M, ncol=1))
delta1<-rnorm(n=M, mean=0, sd=sqrt(var_c1))
delta2<-rnorm(n=M, mean=0, sd=sqrt(var_c2))
for (i in 1:M){
s1_dist[i]<-rnorm(n=1,mean=sqrt(N_1)*(lambda[i]+delta1[i]),sd=1)
s2_dist[i]<-rnorm(n=1,mean=sqrt(N_2)*(lambda[i]+delta2[i]),sd=1)
}
results.data<-data.frame(lambda,s1_dist, s2_dist)
s1_sig <- filter(results.data,s1_dist>zscore1)
num_s1 <-nrow(s1_sig)
zscore2<-qnorm(0.05/num_s1,lower.tail = FALSE)
s1_s2_sig<-filter(s1_sig,s2_dist>zscore2)
#s1 variance
MLE<-function(var){
estimate<-choose(M,num_s1)
for(i in s1_sig$s1){
estimate<-estimate*dnorm(i, mean=0, sd=sqrt(var))
}
estimate<-estimate*(pnorm(zscore1, mean=0, sd=sqrt(var)))^(M-num_s1)
}
max<-0
maxVar<-0
for(i in seq(from=1, to=50, by=.001)){
temp<-MLE(i)
#print(temp)
if (temp>max) {
max<-temp
maxVar<-i
}
}
#sigma_g
sigma_g <- mean(s1_sig$s2_dist/s1_sig$s1_dist)*maxVar/sqrt(N_1*N_2)
var_g<-3
var_c1<-3
var_c2<-0
M<-1000
N_1<-3
N_2<-2
zscore1<-qnorm(0.05/M,lower.tail = FALSE)
lambda <- rnorm(n=M, mean=0, sd=sqrt(var_g))
s1_dist<-as.vector(matrix(nrow=M, ncol=1))
s2_dist<-as.vector(matrix(nrow=M, ncol=1))
delta1<-rnorm(n=M, mean=0, sd=sqrt(var_c1))
delta2<-rnorm(n=M, mean=0, sd=sqrt(var_c2))
for (i in 1:M){
s1_dist[i]<-rnorm(n=1,mean=sqrt(N_1)*(lambda[i]+delta1[i]),sd=1)
s2_dist[i]<-rnorm(n=1,mean=sqrt(N_2)*(lambda[i]+delta2[i]),sd=1)
}
results.data<-data.frame(lambda,s1_dist, s2_dist)
s1_sig <- filter(results.data,s1_dist>zscore1)
num_s1 <-nrow(s1_sig)
zscore2<-qnorm(0.05/num_s1,lower.tail = FALSE)
s1_s2_sig<-filter(s1_sig,s2_dist>zscore2)
#s1 variance
MLE<-function(var){
estimate<-choose(M,num_s1)
for(i in s1_sig$s1){
estimate<-estimate*dnorm(i, mean=0, sd=sqrt(var))
}
estimate<-estimate*(pnorm(zscore1, mean=0, sd=sqrt(var)))^(M-num_s1)
}
max<-0
maxVar<-0
for(i in seq(from=1, to=50, by=.001)){
temp<-MLE(i)
#print(temp)
if (temp>max) {
max<-temp
maxVar<-i
}
}
#sigma_g
sigma_g <- mean(s1_sig$s2_dist/s1_sig$s1_dist)*maxVar/sqrt(N_1*N_2)
#estimating c1
c1_est<-(maxVar-1-sigma_g*(N_1))/(N_1)
#estimating c2
#this is not accuraute and we must fine another way to do this.
var_1<-((s1_sig$s1_dist)*(sqrt(N_2)))-(s1_sig$s2_dist*(sqrt(N_1)))
var_1<-var(var_1)/(N_1+N_2)
expected<-(N_2*(1+N_1*var_c1)+N_1*(1+N_2*var_c2))/(N_1+N_2)
var_g<-3
var_c1<-3
var_c2<-0
M<-1000
N_1<-3
N_2<-2
zscore1<-qnorm(0.05/M,lower.tail = FALSE)
lambda <- rnorm(n=M, mean=0, sd=sqrt(var_g))
s1_dist<-as.vector(matrix(nrow=M, ncol=1))
s2_dist<-as.vector(matrix(nrow=M, ncol=1))
delta1<-rnorm(n=M, mean=0, sd=sqrt(var_c1))
delta2<-rnorm(n=M, mean=0, sd=sqrt(var_c2))
for (i in 1:M){
s1_dist[i]<-rnorm(n=1,mean=sqrt(N_1)*(lambda[i]+delta1[i]),sd=1)
s2_dist[i]<-rnorm(n=1,mean=sqrt(N_2)*(lambda[i]+delta2[i]),sd=1)
}
results.data<-data.frame(lambda,s1_dist, s2_dist)
s1_sig <- filter(results.data,s1_dist>zscore1)
num_s1 <-nrow(s1_sig)
zscore2<-qnorm(0.05/num_s1,lower.tail = FALSE)
s1_s2_sig<-filter(s1_sig,s2_dist>zscore2)
#s1 variance
MLE<-function(var){
estimate<-choose(M,num_s1)
for(i in s1_sig$s1){
estimate<-estimate*dnorm(i, mean=0, sd=sqrt(var))
}
estimate<-estimate*(pnorm(zscore1, mean=0, sd=sqrt(var)))^(M-num_s1)
}
max<-0
maxVar<-0
for(i in seq(from=1, to=50, by=.001)){
temp<-MLE(i)
#print(temp)
if (temp>max) {
max<-temp
maxVar<-i
}
}
#sigma_g
sigma_g <- mean(s1_sig$s2_dist/s1_sig$s1_dist)*maxVar/sqrt(N_1*N_2)
#estimating c1
c1_est<-(maxVar-1-sigma_g*(N_1))/(N_1)
#estimating c2
#this is not accuraute and we must fine another way to do this.
var_1<-((s1_sig$s1_dist)*(sqrt(N_2)))-(s1_sig$s2_dist*(sqrt(N_1)))
var_1<-var(var_1)/(N_1+N_2)
expected<-(N_2*(1+N_1*var_c1)+N_1*(1+N_2*var_c2))/(N_1+N_2)
sigma_g <- mean(s1_sig$s2_dist)/mean(s1_sig$s1_dist))*maxVar/sqrt(N_1*N_2)
sigma_g <- mean(s1_sig$s2_dist)/mean(s1_sig$s1_dist)*maxVar/sqrt(N_1*N_2)
sigma_g <- mean(s1_sig$s2_dist/s1_sig$s1_dist)*maxVar/sqrt(N_1*N_2)
#sigma_g
sigma_g <- mean(s1_sig$s2_dist/s1_sig$s1_dist)*maxVar/sqrt(N_1*N_2)
sigma_g2 <- mean(s1_sig$s2_dist)/mean(s1_sig$s1_dist)*maxVar/sqrt(N_1*N_2)
sigma_g <- mean(s1_sig$s2_dist)/mean(s1_sig$s1_dist)*maxVar/sqrt(N_1*N_2)
MLE<-function(var){
M_Org<-0.05/threshold
estimate<-choose(M_Org,M)
estimate<-1
for(i in results.data$s1){
estimate<-estimate*dnorm(i, mean=0, sd=sqrt(var))
}
estimate<-estimate*(pnorm(Z_Score_s1, mean=0, sd=sqrt(var)))^(M_Org-M)
}
estimate_sigG<-function(){
max<-0
maxVar<-0
for(i in seq(from=1, to=50, by=.001)){
temp<-MLE(i)
#print(temp)
if (temp>max) {
max<-temp
maxVar<-i
}
}
sigma_g_est <- mean(results.data$s2)/mean(results.data$s1)*maxVar/sqrt(N_1*N_2)
return(c(sigma_g_est, maxVar))
}
estimate_c1<-function(maxVar,sig_g){
c1_est<-(maxVar-1-sig_g*(N_1))/(N_1)
return(c1_est)
}
filename<-"./files/4_19820697_data_upbuilt_filtered_upbuilt.csv" #average #5 vs 12.96
data<-read.csv(filename, sep=",")
#creating test statistic
results.data<-data.frame(data$beta.disc, data$se.disc)
results.data$s1<-(data$beta.disc)/(data$se.disc)
results.data$s2<-(data$beta.rep)/(data$se.rep)
M=nrow(data)
var_given=data$trait.var[1]
threshold=data$p.thresh[1]
z_score_nom <- qnorm(0.05,lower.tail = FALSE)
z_score <- qnorm(0.05/M,lower.tail =FALSE)
Z_Score_s1<-qnorm(threshold,lower.tail =FALSE)
N_1<-mean(data$n.disc)
N_2<-mean(data$n.rep)
#estimating sigma using s1
sigma_g_est <-estimate_sigG()[1]
maxVar<-estimate_sigG()[2]
c1_est<-estimate_c1(estimate_sigG()[1], sigma_g_est)
c1_est<-(maxVar-1-sig_g*(N_1))/(N_1)
(maxVar-1)/N_1
(maxVar-1)/N_1-sigma_g_est
(maxVar-1-sigma_g_est*(N_1))/(N_1)
c1_est<-estimate_c1(maxVar, sigma_g_est)
